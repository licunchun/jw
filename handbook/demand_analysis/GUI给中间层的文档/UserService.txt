简介：UserService即在User部分提供的服务

数据部分，不同的userType需要使用的数据不同
Student:			userType,grade,school,gender,name,ID,password
Teacher:			userType,school,gender,name,ID,password
Admin:          	userType,name,ID,password


主体如下：
- userType(UserType)	// enum中的用户种类
- grade(Grade)		// enum中的年级，当且仅当用户为学生时使用
- school(School)		// enum中的学院，学生或者教师（注：学生可选范围更小）；
- gender(Gender)		// enum中的性别
- name(String)		// 姓名
- ID(String)			// ID号
- password(String)		// 密码

————————————————————————————
+ 所有属性对应的get函数
————————————————————————————
+ 除了,UserType,ID,Gender之外其他属性对应的set函数
————————————————————————————
+ Regist(void);
参数:
	void
返回：
	void	
描述：
	原来的UserService中有除了ID之外的全部属性
	注册账户，生成ID，并保存至数据库
	这边用前面的函数保证输入UserService中的数据正确，所以在此方法中若不正确就直接报错退出程序（记得写报错）
	记得注册之后要把ID填上，保证UserService信息的完整
————————————————————————————
+ isNameValid(void);
参数:
	void
返回：
	boolean			是否合法
描述：
	用户名name是否合法（可以重名不需要查询，判断长度和是否存在特殊字符等）
————————————————————————————
+ isPasswordValid(void);
参数:
	void
返回：
	boolean			是否合法
描述：
	密码password是否合法（长度还有是否是可见合法字符，比如中文显然不行，（可能会出现显示等问题））
————————————————————————————
+ checkIDAndPassword(void);
参数:
	void
返回：
	boolean			用户密码是否对应
描述：
	查询用户是否对应：
		若不存在或者不对应则返回false；
		若存在且对应则返回true，并从数据库拉取用户其他对应属性
————————————————————————————